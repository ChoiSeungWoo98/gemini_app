# 워크플로우 이름
name: Create Release and Upload dmg File

# 'v'로 시작하는 태그가 푸시될 때 실행
on:
  push:
    tags:
      - 'v*'

jobs:
  # jobs 이름
  build-and-release:
    # 가상환경 지정
    runs-on: macos-latest
    # 권한 설정 부분
    permissions:
      contents: write

    steps:
      # 1. 소스 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v4
      # .nvmrc 파일에서 Node.js 버전을 자동으로 읽어와 설정하도록 설정
      - name: Setup Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          # npm 캐시를 사용하도록 설정
          cache: 'npm'

      # 2. 의존성 설치
      - name: Install dependencies
        run: npm install

      # 3. 앱 빌드
      - name: Build the app
        run: npm run build

      # 4. 릴리즈 생성 및 업로드 (ID 부여)
      - name: Create Release and Upload Asset
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.dmg

      # 5. Tap 업데이트 워크플로우에 신호 보내기
      - name: Dispatch Tap Update Workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.TAP_REPO_TOKEN }}
          # 보내는 신호 이름
          event-type: new-release-created
          # 신호를 보낼 때, 필요한 정보를 담아서 보내도록 설정
          client-payload: >-
            {
              "version": "${{ github.ref_name }}",
              "download_url": "${{ fromJson(steps.create_release.outputs.assets)[0].browser_download_url }}"
            }
