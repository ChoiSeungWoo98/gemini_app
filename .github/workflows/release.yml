# 워크플로우의 이름입니다.
name: Create Release and Update Tap

# 'v'로 시작하는 태그가 푸시될 때 실행됩니다.
on:
  push:
    tags:
      - 'v*'

jobs:
  release-and-update-tap:
    runs-on: macos-latest

    # 작업에 필요한 권한을 명시적으로 부여합니다.
    permissions:
      contents: write # 릴리즈 생성을 위해 필요

    steps:
      # --- 1. 앱 빌드 및 릴리즈 생성 ---
      - name: Checkout App Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build the App
        run: npm run build

      - name: Create GitHub Release and Upload Asset
        id: create_release # 이 단계에 ID를 부여하여 출력값을 나중에 사용합니다.
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- 2. Homebrew Tap 업데이트 ---
      - name: Check out Tap Repo
        uses: actions/checkout@v4
        with:
          repository: ChoiSeungWoo98/homebrew-gemini-app
          token: ${{ secrets.TAP_REPO_TOKEN }} # 이전에 만든 PAT 사용

      - name: Set up Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Update Homebrew Tap
        run: |
          # 릴리즈에서 생성된 .dmg 파일의 SHA256 체크섬을 계산합니다.
          SHA256=$(shasum -a 256 ${{ fromJson(steps.create_release.outputs.assets)[0].name }})
          # 루비 파일의 version과 sha256 값을 새것으로 교체합니다.
          # sed 명령어는 macOS와 Linux에서 다르게 작동하므로 -i '' 옵션을 사용합니다.
          sed -i '' "s/version \".*\"/version \"${{ github.ref_name.substring(1) }}\"/" Casks/my-gemini-app.rb
          sed -i '' "s/sha256 \".*\"/sha256 \"${SHA256%% *}\"/" Casks/my-gemini-app.rb
        working-directory: ${{ github.workspace }}
        # working-directory를 지정하는 대신, Casks/my-gemini-app.rb 파일에 대한 전체 경로를 사용하도록 수정.
        # 위 working-directory는 필요없음. sed 명령어의 마지막 인자를 수정해야 함.
        # sed -i '' "s/sha256 \".*\"/sha256 \"${SHA256%% *}\"/" Casks/my-gemini-app.rb
        # Let's fix the sed command to be more robust
      - name: Update Homebrew Tap with sed
        run: |
          # The asset name should be available from the release step
          DMG_FILE=$(ls dist/*.dmg | head -n 1)
          SHA256=$(shasum -a 256 "$DMG_FILE" | awk '{print $1}')
          NEW_VERSION="${{ github.ref_name.substring(1) }}"
          
          echo "Updating tap to version ${NEW_VERSION} with SHA256 ${SHA256}"
          
          CASK_FILE="Casks/my-gemini-app.rb"
          sed -i.bak "s/version \".*\"/version \"${NEW_VERSION}\"/" "$CASK_FILE"
          sed -i.bak "s/sha256 \".*\"/sha256 \"${SHA256}\"/" "$CASK_FILE"
          rm "${CASK_FILE}.bak"
          
      - name: Commit and Push to Tap Repo
        run: |
          git add Casks/my-gemini-app.rb
          git commit -m "Update my-gemini-app to ${{ github.ref_name }}"
          git push
